install.packages(c("dplyr", "lubridate", "googlesheets4"))
install.packages(c("rmarkdown", "knitr"))
library(dplyr)
library(knitr)
library(lubridate)
library(markdown)
library(rmarkdown)
install.packages("some_package")
install.packages('some_package')
knitr::opts_chunk$set(echo = TRUE)
studentId <- c(410773002, 410773015)
studentId= as.character(studentId)
getoption("repos")
getOption("repos")
library(dplyr)
library(knitr)
library(rmarkdown)
library(stringr)
install.packages("devtools")
install_version("stringr", version = "1.2.0")
library(devtools)
install_version("stringr", version = "1.2.0")
update.packages()
install_version("rmarkdown", version = "1.0.0")
install_version("rmarkdown", version = "1.10")
install.packages("rmarkdown")
install.packages("rmarkdown")
getOption("repos")
getOption("repos")
options(repos = c(CRAN = "https://cran.rstudio.org"))
library(dplyr)
library(lubridate)
library(stringr)
library(rmarkdown)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
View(小明108學年課表C)
View(小明108學年課表C)
View(小明108學年課表C)
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
listexample = list(2,6,7)
print(listexample)
View(listexample)
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
小明108學年課表C[["108學年第2學期"]]
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite, lib.loc = "C:/Program Files/Microsoft/R Client/R_SERVER/library")
knitr::opts_chunk$set(echo = TRUE)
authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
)
library(knitr)
library(lubridate)
library(rmarkdown)
library(dplyr)
authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
)
committerValues <-
list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
)
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
toJSON(authorValues)
detach("package:jsonlite", unload = TRUE)
library(jsonlite, lib.loc = "C:/Program Files/Microsoft/R Client/R_SERVER/library")
install.packages("jsonlite")
library(jsonlite)
knitr::opts_chunk$set(echo = TRUE)
toJSON(authorValues)
commit=
authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
commit=
list(authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committerValues <-
list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
)
library(dplyr)
library(lubridate)
library(rmarkdown)
commit=
list(authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committerValues <-
list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
)
toJSON(commit)
`小明成績`=list(`108第一學期`=list("108-1",`個體經濟學`=
list(teacher=`Alice老師`,score=85,`總體經濟學`=list(teacher=`Mark老師`,score=73)),
`108第二學期`=list("108-2",`作業研究`=list(teacher=`Jason老師`,score=90))))
`小明成績`=list(`108第一學期`=list(
"108-1",`個體經濟學`=list(teacher=c("Alice老師"),score=C(85)),
`總體經濟學`=list(teacher=C("Mark老師"),score=73),
`108第二學期`=list("108-2",`作業研究`=list(teacher="Jason老師",score=90))))
library(knitr)
library(stringr)
`小明成績`=list(`108第一學期`=list(
"108-1",`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher=C("Mark老師"),score=73),
`108第二學期`=list("108-2",`作業研究`=list(teacher="Jason老師",score=90))))
`小明成績`=list(`108第一學期`=list(
"108-1",`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher="Mark老師",score=73),
`108第二學期`=list("108-2",`作業研究`=list(teacher="Jason老師",score=90))))
View(小明成績)
`小明成績`=list(`108第一學期`=list(
"108-1",`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher="Mark老師",score=73)),
`108第二學期`=list("108-2",`作業研究`=list(teacher="Jason老師",score=90)))
`小明成績`=list(
`108第一學期`=list(
"108-1",
`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher="Mark老師",score=73)),
`108第二學期`=list("108-2",
`作業研究`=list(teacher="Jason老師",score=90)))
View(小明成績)
commit=
list(authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committerValues <-
list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
)
View(commit)
`小明成績`=list(
`108第一學期`=list(
"108-1",
`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher="Mark老師",score=73)),
`108第二學期`=list("108-2",
`作業研究`=list(teacher="Jason老師",score=90)))
print(`小名成績`)
grade=list(
`108第一學期`=list(
"108-1",
`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher="Mark老師",score=73)),
`108第二學期`=list("108-2",
`作業研究`=list(teacher="Jason老師",score=90)))
print(grade)
View(grade)
View(commit)
weather=fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
View(weather_next36hours)
save(grade,file="第五堂課test.rda")
load("第五堂課test.rda")
View(grade)
knitr::opts_chunk$set(echo = TRUE)
Prisoners_dillemma=list(
Aplayer_stay_silent=list(Bplayer_stay_silent=list(Aconsequence=-1,Bconsequence=-1),
Bplayer_betrays=list(Aconsequence=-3,Bconsequence=0)),
Aplayer_betrays==list(Bplayer_stay_silent=list(Aconsequence=0,Bconsequence=-3),
Bplayer_betrays=list(Aconsequence=-2,Bconsequence=-2))
)
library(knitr)
library(jsonlite)
library(rmarkdown)
library(stringr)
library(dplyr)
library(lubridate)
Prisoners_dillemma=list(
Aplayer_stay_silent=list(Bplayer_stay_silent=list(Aconsequence=-1,Bconsequence=-1),
Bplayer_betrays=list(Aconsequence=-3,Bconsequence=0)),
Aplayer_betrays==list(Bplayer_stay_silent=list(Aconsequence=0,Bconsequence=-3),
Bplayer_betrays=list(Aconsequence=-2,Bconsequence=-2))
)
Prisoners_dillemma=list(
Aplayer_stay_silent=list(Bplayer_stay_silent=list(Aconsequence=-1,Bconsequence=-1),
Bplayer_betrays=list(Aconsequence=-3,Bconsequence=0)),
Aplayer_betrays==list(Bplayer_stay_silent=list(Aconsequence=0,Bconsequence=-3),
Bplayer_betrays=list(Aconsequence=-2,Bconsequence=-2))
)
Prisoners_dillemma=list(
Aplayer_stay_silent=list(Bplayer_stay_silent=list(Aconsequence=-1,Bconsequence=-1),
Bplayer_betrays=list(Aconsequence=-3,Bconsequence=0)),
Aplayer_betrays==list(Bplayer_stay_silent=list(Aconsequence=0,Bconsequence=-3),
Bplayer_betrays=list(Aconsequence=-2,Bconsequence=-2))
)
Prisoners_dillemma=list(
Aplayer_stay_silent=list(Bplayer_stay_silent=list(Aconsequence=-1,Bconsequence=-1),
Bplayer_betrays=list(Aconsequence=-3,Bconsequence=0)),
Aplayer_betrays==list(Bplayer_stay_silent=list(Aconsequence=0,Bconsequence=-3),
Bplayer_betrays=list(Aconsequence=-2,Bconsequence=-2))
)
Prisoners_dillemma=list(
`Aplayer_stay_silent`=list(Bplayer_stay_silent=list(Aconsequence=-1,Bconsequence=-1),
Bplayer_betrays=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`==list(Bplayer_stay_silent=list(Aconsequence=0,Bconsequence=-3),
Bplayer_betrays=list(Aconsequence=-2,Bconsequence=-2))
)
Prisoners_dillemma=list(
`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=-1,Bconsequence=-1),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`==list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2))
)
grade=list(
`108第一學期`=list(
"108-1",
`個體經濟學`=list(teacher=c("Alice老師"),score=85),
`總體經濟學`=list(teacher="Mark老師",score=73)),
`108第二學期`=list("108-2",
`作業研究`=list(teacher="Jason老師",score=90)))
print(grade)
Prisoners_dillemma=list(
`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=-1,Bconsequence=-1),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2))
)
View(Prisoners_dillemma)
Prisoners_dillemma=list(
`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=c(-1),Bconsequence=c(-1)),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2))
)
View(Prisoners_dillemma)
library(dplyr)
library(jsonlite)
library(lubridate)
library(rmarkdown)
library(stringr)
knitr::opts_chunk$set(echo = TRUE)
Prisoners_dillemma=list(
`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=c(-1),Bconsequence=c(-1)),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2))
)
Prisoners_dillemma=list(
`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=c(-1),Bconsequence=c(-1)),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2))
)
print(Prisoners_dillemma)
Prisoners_dillemma=list(
players_of_the_game=list("A","B"),
each_players_strategy=list(A_strategy=list("stay_silent","betray"),B_strategy=list("stay_silent","betray")),
eventual_outcome=list(`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=c(-1),Bconsequence=c(-1)),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2)))
)
Prisoners_dillemma=list(
players_of_the_game=list("A","B"),
each_players_strategy=list(A_strategy=list("stay_silent","betray"),B_strategy=list("stay_silent","betray")),
eventual_outcome=list(`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=c(-1),Bconsequence=c(-1)),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2)))
)
print(Prisoners_dillemma)
Prisoners_dillemma=list(
players_of_the_game=list(name1="A",name2="B"),
each_players_strategy=list(A_strategy=list(option1="stay_silent",option2"betray"),B_strategy=list(option1"stay_silent",option2"betray")),
Prisoners_dillemma=list(
players_of_the_game=list(name1="A",name2="B"),
each_players_strategy=list(A_strategy=list(option1="stay_silent",option2="betray"),B_strategy=list(option1="stay_silent",option2="betray")),
eventual_outcome=list(`Aplayer_stay_silent`=list(`Bplayer_stay_silent`=list(Aconsequence=c(-1),Bconsequence=c(-1)),
`Bplayer_betrays`=list(Aconsequence=-3,Bconsequence=0)),
`Aplayer_betrays`=list(`Bplayer_stay_silent`=list(Aconsequence=0,Bconsequence=-3),
`Bplayer_betrays`=list(Aconsequence=-2,Bconsequence=-2)))
)
print(Prisoners_dillemma)
library(stringr)
library(knitr)
install.packages("rmarkdown")
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
remove.packages("stringr","rmarkdown","knitr")
remove.packages("knitr", lib="~/R/win-library/3.3")
remove.packages("rmarkdown", lib="~/R/win-library/3.3")
remove.packages("stringr", lib="~/R/win-library/3.3")
install.packages(c("rmarkdown", "knitr", "stringr"))
library(knitr)
library(rmarkdown)
library(stringr)
knitr::opts_chunk$set(echo = TRUE)
updateR()
install.packages("installr")
library(installr)
updateR()
knitr::opts_chunk$set(echo = TRUE)
library(installr)
updateR()
